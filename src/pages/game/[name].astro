---
import Layout from "../../layouts/Layout.astro";

import { gameDetails } from "../../services/games";

const { name } = Astro.params;
const game = await gameDetails(name);

if (!game) {
  return Astro.redirect("/404");
}
// game debe ser el objeto con la estructura que diste
---

<Layout>
  <main
    class="relative min-h-screen bg-claro-fondo dark:bg-oscuro-fondo transition-colors duration-500"
  >
    <!-- Imagen de fondo del videojuego -->
    <div class="absolute inset-0 w-full h-96 md:h-[420px] overflow-hidden z-0">
      <img
        src={game.background_image}
        alt={game.name}
        class="w-full h-full object-cover object-center brightness-90 dark:brightness-60 transition-all duration-500"
        loading="lazy"
      />
      <div
        class="absolute inset-0 bg-gradient-to-b from-black/40 via-transparent to-claro-fondo dark:to-oscuro-fondo"
      >
      </div>
    </div>

    <!-- Contenido principal -->
    <section class="relative max-w-5xl mx-auto px-4 pt-80 md:pt-[380px] pb-12">
      <div
        class="bg-claro-tarjeta dark:bg-oscuro-tarjeta rounded-xl shadow-lg p-6 md:p-10 flex flex-col md:flex-row gap-8"
      >
        <!-- Imagen secundaria o logo (opcional) -->
        <div class="flex-shrink-0 flex flex-col items-center md:items-start">
          <img
            src={game.background_image_additional || game.background_image}
            alt={game.name_original}
            class="w-40 h-40 object-cover rounded-lg shadow-md border border-claro-borde dark:border-oscuro-borde bg-white/30 dark:bg-black/30"
            loading="lazy"
          />
          <a
            href={game.website}
            target="_blank"
            rel="noopener noreferrer"
            class="mt-4 text-blue-600 dark:text-blue-400 underline hover:text-blue-800 dark:hover:text-blue-200 transition-colors"
          >
            Official Website
          </a>
        </div>
        <!-- Info principal -->
        <div class="flex-1 flex flex-col gap-4">
          <h1
            class="text-3xl md:text-4xl font-bold text-claro-texto dark:text-oscuro-texto"
          >
            {game.name}
          </h1>
          <p
            class=" whitespace-pre-line text-claro-texto-secundario dark:text-oscuro-texto-secundario text-base md:text-lg"
            >
            {game.description}
          </p>
          <div class="flex flex-wrap gap-4 mt-2">
            <span
              class="px-3 py-1 rounded bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-sm font-semibold"
            >
              Released: {game.released}
            </span>
            <span
              class="px-3 py-1 rounded bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 text-sm font-semibold"
            >
              Rating: {game.rating} / {game.rating_top}
            </span>
            <span
              class="px-3 py-1 rounded bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200 text-sm font-semibold"
            >
              Metacritic: {game.metacritic}
            </span>
          </div>
          <div class="flex flex-wrap gap-2 mt-4">
            {
              game.platforms?.map(
                ({ platform }: { platform: { name: string } }) => (
                  <span class="px-2 py-1 rounded bg-claro-borde dark:bg-oscuro-borde text-xs text-claro-texto dark:text-oscuro-texto">
                    {platform.name}
                  </span>
                )
              )
            }
          </div>
          {
            game.esrb_rating && (
              <div class="mt-4 flex items-center gap-2">
                <span class="text-sm font-medium text-claro-texto dark:text-oscuro-texto">
                  ESRB:
                </span>
                <span class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 text-xs text-gray-700 dark:text-gray-200">
                  {game.esrb_rating.name}
                </span>
              </div>
            )
          }
        </div>
      </div>
    </section>
  </main>
</Layout>
